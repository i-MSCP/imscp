#!/usr/bin/perl

=head1 NAME

 imscp-reconfigure Reconfigure i-MSCP

=head1 SYNOPSIS

 imscp-reconfigure [options]...

=cut

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2017 by Laurent Declercq <l.declercq@nuxwin.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

use strict;
use warnings;
use File::Basename;
use FindBin;
use lib "$FindBin::Bin/../PerlLib", "$FindBin::Bin/../PerlVendor";
use iMSCP::Debug;
use iMSCP::Dialog;
use iMSCP::EventManager;
use iMSCP::Getopt;
use Net::LibIDN qw/ idn_to_unicode /;
use POSIX qw /locale_h /;

setlocale(LC_MESSAGES, "C.UTF-8");

$ENV{'LANG'} = 'C.UTF-8';
$ENV{'PATH'} = '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin';

# Needed to make any sub-process aware of i-MSCP setup process
$ENV{'IMSCP_SETUP'} = 1;

newDebug( 'imscp-setup.log' );

# Set backend mode
$main::execmode = 'setup' unless defined $main::execmode;

# Init variable that holds questions
%main::questions = () unless %main::questions;

# Initialize command line options
$main::skippackages = 0;

# Parse command line options
iMSCP::Getopt->parse( sprintf( 'Usage: perl %s [OPTION]...', basename( $0 )) . qq {
 -s,    --skip-distro-packages  Do not install/update distro packages.},
    'skip-distro-packages|s' => \$main::skippackages
);

# Handle preseed option
if ( iMSCP::Getopt->preseed ) {
    require iMSCP::Getopt->preseed;

    # The preseed option supersede the reconfigure option
    iMSCP::Getopt->reconfigure( 'none' );
    $main::reconfigure = 'none';
    iMSCP::Getopt->noprompt( 1 );
} else {
    $main::reconfigure = iMSCP::Getopt->reconfigure;
}

# Set debug and verbose options
setDebug( iMSCP::Getopt->debug );
setVerbose( iMSCP::Getopt->noprompt && iMSCP::Getopt->verbose );

# Handle the listener option
require iMSCP::Getopt->listener if iMSCP::Getopt->listener;

# handle noprompt option
if ( iMSCP::Getopt->noprompt ) {
    debugRegisterCallBack(
        sub {
            print STDOUT output( 'i-MSCP has been successfully installed/updated.', 'ok' ) unless $?;

            # We exit with status 5 from iMSCP::Dialog in noninteractive mode
            if ( $? == 5 ) {
                if ( iMSCP::Getopt->preseed ) {
                    print STDERR output( 'Missing or bad entry found in your preseed file.', 'fatal' );
                } else {
                    print STDERR output( 'Missing or bad entry found in configuration file.', 'fatal' );
                }
            }
        }
    );
    print STDOUT output( 'Installation in progress... Please wait.', 'info' );
}

sub run
{
    require "$FindBin::Bin/imscp-setup-methods.pl";

    my $rs = setupBoot();
    $rs ||= iMSCP::EventManager->getInstance()->trigger( 'beforeSetup' );
    $rs ||= setupRegisterListeners();
    return $rs if $rs;

    unless ( iMSCP::Getopt->noprompt ) {
        my $dialog = iMSCP::Dialog->getInstance();
        $dialog->set( 'title', 'i-MSCP Reconfiguration Dialog' );
        $dialog->set( 'yes-label', 'Continue' );
        $dialog->set( 'no-label', 'Abort' );

        exit 0 if $dialog->yesno( <<"EOF", 'abort_by_default' );

Welcome to the \\Z1i-MSCP $main::imscpConfig{'Version'}\\Zn reconfiguration dialog.

This program will reconfigures your i-MSCP instance.

During the process, some or all services might require to be shutdown or restarted.

You can now either continue or abort.
EOF

        $dialog->resetLabels();
    }

    $rs ||= setupDialog();
    $rs = setupTasks();
    $rs ||= iMSCP::EventManager->getInstance()->trigger( 'afterSetup' );
    return $rs if $rs || iMSCP::Getopt->noprompt;

    my $port = $main::imscpConfig{'BASE_SERVER_VHOST_PREFIX'} eq 'http://'
        ? $main::imscpConfig{'BASE_SERVER_VHOST_HTTP_PORT'}
        : $main::imscpConfig{'BASE_SERVER_VHOST_HTTPS_PORT'};
    my $vhost = idn_to_unicode( $main::imscpConfig{'BASE_SERVER_VHOST'}, 'utf-8' ) // '';

    iMSCP::Dialog->getInstance()->infobox( <<"EOF" );

\\Z1Congratulations\\Zn

i-MSCP has been successfully reconfigured.

Please connect to $main::imscpConfig{'BASE_SERVER_VHOST_PREFIX'}$vhost:$port and login with your administrator account.

Thank you for choosing i-MSCP.
EOF

    0;
}

exit run();

=head1 AUTHOR

 Laurent Declercq <l.declercq@nuxwin.com>

=cut
