#!/usr/bin/perl

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2016 by internet Multi Server Control Panel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

use strict;
use warnings;
use FindBin;
use lib "$FindBin::Bin/../PerlLib";
use iMSCP::Debug;
use iMSCP::Bootstrapper;
use Mail::Address;
use MIME::Parser;
use MIME::Entity;
use Encode;

newDebug('imscp-arpl-msgr/imscp-arpl-msgr.log');

iMSCP::Bootstrapper->getInstance()->boot({ nolock => 'yes', norequirements => 'yes', config_readonly => 'yes' });

eval {
	my $dbh = iMSCP::Database->factory()->getRawDb();
	$dbh->{'RaiseError'} = 1;

	$dbh->do("DELETE FROM `autoreplies_log` WHERE ADDTIME(`time`, '24:00:00') < NOW()");

	(my $from = $ARGV[0]) =~ s/imscp-arpl\.//;

	my $message = do { local $/; <STDIN> };

	my $parser = new MIME::Parser;
	$parser->output_to_core(1);
	$parser->tmp_to_core(1);

	my $oEnt = $parser->parse_data($message) or die('Unable to parse message');
	my $oHead = $oEnt->head() or die('Unable to get message header');

	my ($to) = Mail::Address->parse($oHead->get('From')) or die("Unable to parse From field from message header");
	$to = $to->address();

	unless(
		$oHead->get('X-Mailer') && $oHead->get('X-Mailer') =~ /Auto-Reply/i ||
		$oHead->get('Auto-Submitted') && $oHead->get('Auto-Submitted') =~ /auto-replied/i ||
		$oHead->get('Sender') && $oHead->get('Sender') =~ /autoresponder/i ||
		$oHead->get('X-Autoresponse-From')
	) {
		my $row = $dbh->selectrow_array(
			"
				SELECT
					COUNT(`time`)
				FROM
					`autoreplies_log`
				WHERE
					`from` = ?
				AND
					`to` = ?
				AND
					ADDTIME(`time`, '24:00:00') > NOW()
			",
			undef,
			$from,
			$to
		);

		unless($row) {
			$row = $dbh->selectrow_array(
				'SELECT `mail_auto_respond_text` FROM `mail_users` WHERE `mail_addr` = ? AND `mail_auto_respond` = 1',
				undef,
				$from
			);

			if($row) {
				my $nEnt = MIME::Entity->build(
					'Type' => 'multipart/mixed; charset=utf-8',
					'From' => $from,
					'To' => $to,
					'Subject' => '[Auto-Reply] ' . $oHead->get('Subject'),
					'X-Autoresponse-From' => $from,
					'X-Mailer' => "i-MSCP Auto-Reply Mailer"
				);

				$nEnt->attach(
					'Type' => 'text/plain; charset=utf-8',
					'Encoding' => '8bit',
					'Description' => 'Mail User Auto-Reply Message',
					'Data' => encode('UTF-8', $row)
				);

				$nEnt->attach(
					'Type' => 'message/rfc822',
					'Description' => 'Original Message',
					'Data' => $message
				);

				open my $fh, '|-', '/usr/sbin/sendmail -t -oi' or die("Unable to send auto-reply message: $!");
				$nEnt->print($fh);
				close $fh;

				$dbh->do('INSERT INTO `autoreplies_log` (`time`,`from`,`to`) VALUES (NOW(),?,?)', undef, $from, $to);
			}
		}
	}
};

fatal($@) if $@;
