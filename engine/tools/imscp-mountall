#!/usr/bin/perl

=head1 NAME

 imscp-mountall - Mount or umount filesystems by reading entries from i-MSCP fstab-like file

=head1 SYNOPSIS

 imscp-mountall [options]... start|stop

=cut

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2017 by Laurent Declercq <l.declercq@nuxwin.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

use strict;
use warnings;
use File::Basename;
use FindBin;
use lib "$FindBin::Bin/../PerlLib", "$FindBin::Bin/../PerlVendor";
use iMSCP::Bootstrapper;
use iMSCP::Debug;
use iMSCP::Getopt;
use iMSCP::Mount qw/ mount umount isMountpoint getMounts /;
use POSIX qw /locale_h /;

setlocale(LC_MESSAGES, "C.UTF-8");

$ENV{'LANG'} = 'C.UTF-8';
$ENV{'PATH'} = '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin';

sub run
{
    my ($action) = @_;

    my $rs = 0;
    my $fstab = "$main::imscpConfig{'CONF_DIR'}/mounts/mounts.conf";
    return $rs unless -f $fstab;

    open my $fh, '<', $fstab or die( sprintf( "Couldn't open %s: %s", $fstab, $! ));

    while ( <$fh> ) {
        next if /^(?:#|$)/; # Ignore comment and empty lines
        chomp;
        my $fields;
        @{$fields}{ qw/ fs_spec fs_file fs_vfstype fs_mntops ignore_failures / } = split;

        if ( $action eq 'start' ) {
            next if $fields->{'fs_mntops'} =~ /\bnoauto\b/;
            $rs = mount( $fields );
            $rs ? last : next;
        }

        $rs = umount( $fields->{'fs_file'} );
        last if $rs;
    }

    $rs;
}

newDebug( 'imscp_mountall.log' );

iMSCP::Getopt->parseNoDefault( sprintf( 'Usage: perl %s [OPTION]... start|stop', basename( $0 )) . qq {

Mount or umount filesystems by reading entries from i-MSCP fstab-like file.

Note that this script doesn't check for already mounted filesystems.
If you run this script twice with the same action, there will be duplicate mounts.

Anyway, this script shouldn't be run manually. It is best run through the imscp_mountall service.

OPTIONS:
 -d,    --debug         Enable debug mode.
 -v,    --verbose       Enable verbose mode.},
    'debug|d'   => \&iMSCP::Getopt::debug,
    'verbose|v' => \&iMSCP::Getopt::verbose
);

my $action = shift;
defined $action && $action =~ /^(?:start|stop)$/ or iMSCP::Getopt->showUsage();

setVerbose( iMSCP::Getopt->verbose );

my $bootstrapper = iMSCP::Bootstrapper->getInstance();
exit unless $bootstrapper->lock( '/var/lock/imscp-mountall.lock', 'nowait' );

$bootstrapper->boot(
    {
        config_readonly => 1,
        mode            => 'backend',
        nodatabase      => 1,
        nokeys          => 1,
        nolock          => 1
    }
);

exit run( $action );

=head1 AUTHOR

 Laurent Declercq <l.declercq@nuxwin.com>

=cut
