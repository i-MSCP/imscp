#!/usr/bin/perl

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2015 by internet Multi Server Control Panel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @category    i-MSCP
# @copyright   2010-2015 by i-MSCP | http://i-mscp.net
# @author      Laurent Declercq <l.declercq@nuxwin.com>
# @link        http://i-mscp.net i-MSCP Home Site
# @license     http://www.gnu.org/licenses/gpl-2.0.html GPL v2

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/..", "$FindBin::Bin/../PerlLib", "$FindBin::Bin/../PerlVendor";

umask(022);

use iMSCP::Debug;
use iMSCP::Dialog;
use iMSCP::EventManager;
use iMSCP::Getopt;
use File::Basename;

# Turn off localisation features to force any command output to be in english
$ENV{'LANG'} = 'C';

newDebug('imscp-setup.log');

# Entering in silent mode
silent(1);

iMSCP::Getopt->parse(sprintf('Usage: perl %s [OPTION]...', basename($0)));

# Get reconfigure option
$main::reconfigure = iMSCP::Getopt->reconfigure;

# Global variable that holds questions
%main::questions = () unless %main::questions;

# Handle preseed option
my $preseedFile = iMSCP::Getopt->preseed;
if($preseedFile) {
	require $preseedFile;
	# The preseed option supersede the reconfigure option
	iMSCP::Getopt->reconfigure('none');
	$main::reconfigure = 'none';
	undef $preseedFile;
}

# Handle hook-file option
my $hookFile = iMSCP::Getopt->hookFile;
if($hookFile) {
	require $hookFile;
	undef $hookFile;
}

# handle noprompt option
$main::noprompt = iMSCP::Getopt->noprompt;
if($main::noprompt) {
	debugRegisterCallBack(
		sub {
			if($?) { # We exit with status 5 from iMSCP::Dialog in noninteractive mode
				if($? == 5) {
					if(iMSCP::Getopt->preseed) {
						print STDERR output('Missing or bad entry found in your preseed file.', 'fatal');
					} else {
						print STDERR output('Missing or bad entry found in configuration file.', 'fatal');
					}
				}
			} else {
				$ENV{'IMSCP_CLEAR_SCREEN'} = 0;
				print STDOUT output('i-MSCP has been successfully installed/updated.', 'ok');
			}
		}
	);

	print STDOUT output("Installation in progress... Please wait.");
}

# Run setup
sub run
{
	# Include needed library
	require "$FindBin::Bin/imscp-setup-methods.pl";

	# Bootstrap setup
	my $rs = setupBoot();
	return $rs if $rs;

	$rs = iMSCP::EventManager->getInstance()->trigger('beforeSetup');
	return $rs if $rs;

	# Allow any server/addon to register their setup hook functions
	$rs = setupRegisterListeners();
	return $rs if $rs;

	unless($main::noprompt) {
		my $distribution = ucfirst(lc(iMSCP::LsbRelease->getInstance()->getId(1)));
		my $dialog = iMSCP::Dialog->getInstance();

		$dialog->set('yes-label', 'Continue');
		$dialog->set('no-label', 'Abort');

		if ($dialog->yesno(<<EOF)) {

Welcome to the \\Z1i-MSCP $main::imscpConfig{'Version'}\\Zn setup dialog.

This program will install/update i-MSCP on your system.

\\Z3Warning:\\Zn Make sure you have read and performed all steps from the
         \\Zbdocs/$distribution/INSTALL\\Zn file.

   \\Z4Note:\\Zn During the setup process some or all services might require
         to be shutdown or restarted. Only services that are not set as
         '\\Zbno\\Zn' in your imscp.conf file will be processed by this program.
EOF

			$dialog->msgbox(<<EOF);

Setup process has been aborted...
EOF
			exit 0;
		}
	}

	# Process setup dialog
	$rs = setupDialog();
	return $rs if $rs;

	# Process setup tasks
	$rs = setupTasks();
	return $rs if $rs;

	$rs = iMSCP::EventManager->getInstance()->trigger('afterSetup');
	return $rs if $rs;

	unless($main::noprompt) {

		iMSCP::Dialog->getInstance()->msgbox(<<EOF);

\\Z1Congratulation\\Zn

i-MSCP has been successfully updated.

Thank you for choosing i-MSCP.
EOF
	}

	0;
}

exit run();
