#!/usr/bin/perl

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2015 by internet Multi Server Control Panel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @category		i-MSCP
# @copyright	2010-2015 by i-MSCP | http://i-mscp.net
# @author		Daniel Andreca <sci2tech@gmail.com>
# @link			http://i-mscp.net i-MSCP Home Site
# @license		http://www.gnu.org/licenses/gpl-2.0.html GPL v2

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/..", "$FindBin::Bin/../PerlLib", "$FindBin::Bin/../PerlVendor";

use iMSCP::Debug;
use iMSCP::Bootstrapper;
use iMSCP::Servers;
use iMSCP::Addons;

# Turn off localisation features to force any command output to be in English
$ENV{'LANG'} = 'C';

# Do not clear screen at end of script
$ENV{'IMSCP_CLEAR_SCREEN'} = 0;

umask(027);

newDebug('imscp-del-tmp.log');

silent(1);

sub startUp
{
	iMSCP::Bootstrapper->getInstance()->boot(
		{
			'nolock' => 'yes', 'norequirements' => 'yes', 'nokeys' => 'yes', 'nodatabase' => 'yes',
			'config_readonly' => 'yes'
		}
	);

	0;
}

sub process
{
	my $rs = 0;

	for(iMSCP::Servers->getInstance()->get()) {
		next if $_ eq 'noserver';

		my $package = "Servers::$_";

		eval "require $package";

		unless($@) {
			my $instance = $package->factory();
			$rs |= $instance->deleteTmp() if $instance->can('deleteTmp');
		} else {
			error($@);
			$rs = 1;
		}
	}

	for(iMSCP::Addons->getInstance()->get()) {
		my $package = "Addons::$_";

		eval "require $package";

		unless($@) {
			my $instance = $package->getInstance();
			$rs |= $instance->deleteTmp() if $instance->can('deleteTmp');
		} else {
			error($@);
			$rs = 1;
		}
	}

	0;
}

my $rs = 0;

$rs = startUp();
$rs ||= process();

exit $rs;
